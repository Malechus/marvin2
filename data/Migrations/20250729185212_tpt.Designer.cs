// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using marvin2.Models;

#nullable disable

namespace data.Migrations
{
    [DbContext(typeof(ChoreContext))]
    [Migration("20250729185212_tpt")]
    partial class tpt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("marvin2.Models.Chore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PersonName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Chore");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("marvin2.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("marvin2.Models.DailyChore", b =>
                {
                    b.HasBaseType("marvin2.Models.Chore");

                    b.ToTable("DailyChores");
                });

            modelBuilder.Entity("marvin2.Models.MonthlyChore", b =>
                {
                    b.HasBaseType("marvin2.Models.Chore");

                    b.ToTable("MonthlyChores");
                });

            modelBuilder.Entity("marvin2.Models.WeeklyChore", b =>
                {
                    b.HasBaseType("marvin2.Models.Chore");

                    b.Property<int?>("Day")
                        .HasColumnType("int");

                    b.ToTable("WeeklyChores");
                });

            modelBuilder.Entity("marvin2.Models.Chore", b =>
                {
                    b.HasOne("marvin2.Models.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("marvin2.Models.DailyChore", b =>
                {
                    b.HasOne("marvin2.Models.Chore", null)
                        .WithOne()
                        .HasForeignKey("marvin2.Models.DailyChore", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marvin2.Models.MonthlyChore", b =>
                {
                    b.HasOne("marvin2.Models.Chore", null)
                        .WithOne()
                        .HasForeignKey("marvin2.Models.MonthlyChore", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("marvin2.Models.WeeklyChore", b =>
                {
                    b.HasOne("marvin2.Models.Chore", null)
                        .WithOne()
                        .HasForeignKey("marvin2.Models.WeeklyChore", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
